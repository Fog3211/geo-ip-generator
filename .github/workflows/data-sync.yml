name: Daily Data Sync

on:
  schedule:
    # 每天 UTC 02:00 (北京时间 10:00) 运行
    - cron: '0 2 * * *'
  workflow_dispatch: # 允许手动触发
    inputs:
      force_update:
        description: 'Force update even if data is unchanged'
        required: false
        default: false
        type: boolean

env:
  NODE_VERSION: '18'
  PNPM_VERSION: '9'

permissions:
  contents: write

jobs:
  sync-data:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        fetch-depth: 0

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}

    - name: Setup pnpm
      uses: pnpm/action-setup@v2
      with:
        version: ${{ env.PNPM_VERSION }}

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - name: Setup pnpm cache
      uses: actions/cache@v3
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Install dependencies
      run: pnpm install --no-frozen-lockfile

    - name: Setup database
      run: |
        # 创建临时数据库用于数据同步
        export DATABASE_URL="file:./sync.db"
        pnpm run db:push

    - name: Run data synchronization
      env:
        DATABASE_URL: "file:./sync.db"
        FORCE_UPDATE: ${{ github.event.inputs.force_update || 'false' }}
      run: |
        # 运行数据同步脚本（包含备份、更新、回退机制）
        pnpm run sync:data

    - name: Check for changes
      id: check_changes
      run: |
        if git diff --quiet data/; then
          echo "changes=false" >> $GITHUB_OUTPUT
          echo "📊 数据无变化，跳过提交"
        else
          echo "changes=true" >> $GITHUB_OUTPUT
          echo "📊 检测到数据变化"
        fi

    - name: Configure Git
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        # 自定义提交身份（作者与提交者）
        git config --local user.name "GeoIP Data Bot"
        git config --local user.email "bot@geo-ip-generator.local"
        export GIT_AUTHOR_NAME="GeoIP Data Bot"
        export GIT_AUTHOR_EMAIL="bot@geo-ip-generator.local"
        export GIT_COMMITTER_NAME="GeoIP Data Bot"
        export GIT_COMMITTER_EMAIL="bot@geo-ip-generator.local"

    - name: Commit and push changes
      if: steps.check_changes.outputs.changes == 'true'
      run: |
        # 获取当前时间戳
        TIMESTAMP=$(date '+%Y%m%d_%H%M%S')
        
        # 添加所有数据文件
        git add data/
        
        # 提交变更（显式作者信息）
        git commit --author="GeoIP Data Bot <bot@geo-ip-generator.local>" -m "chore: update geo-ip data - ${TIMESTAMP}

        📊 Data sync summary:
        - Updated at: $(date '+%Y-%m-%d %H:%M:%S UTC')
        - Territories: $(jq '.metadata.countries' data/combined-geo-ip-data.json)
        - IP ranges: $(jq '.metadata.ipRanges' data/combined-geo-ip-data.json)
        - Data size: $(jq -r '.metadata.dataSize' data/combined-geo-ip-data.json)
        
        🤖 Auto-generated by GitHub Actions"
        
        # 推送到远程仓库（使用默认 GITHUB_TOKEN）
        git push origin HEAD:${GITHUB_REF_NAME}

    - name: Create release on major updates
      if: steps.check_changes.outputs.changes == 'true'
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: "data-v$(date '+%Y.%m.%d')"
        release_name: "Data Release $(date '+%Y-%m-%d')"
        body: |
          📊 **Automated Data Release**
          
          **更新时间**: $(date '+%Y-%m-%d %H:%M:%S UTC')
          **国家/地区数量**: $(jq '.metadata.countries' data/combined-geo-ip-data.json)
          **IP段数量**: $(jq '.metadata.ipRanges' data/combined-geo-ip-data.json)
          **数据大小**: $(jq -r '.metadata.dataSize' data/combined-geo-ip-data.json)
          
          **可下载文件**:
          - 📄 [JSON格式](./data/combined-geo-ip-data.json)
          - 🗜️ [压缩JSON](./data/combined-geo-ip-data.min.json) 
          - 📋 [CSV格式](./data/combined-geo-ip-data.csv)
          - 📊 [Excel格式](./data/combined-geo-ip-data.xlsx)
          
          **数据源**:
          - 地区数据: [mledoze/countries](https://github.com/mledoze/countries)
          - IP数据: [IP2Location LITE](https://lite.ip2location.com/)
          
          🤖 由GitHub Actions自动生成
        draft: false
        prerelease: false

    - name: Upload artifacts
      if: steps.check_changes.outputs.changes == 'true'
      uses: actions/upload-artifact@v4
      with:
        name: geo-ip-data-$(date '+%Y%m%d')
        path: |
          data/combined-geo-ip-data.json
          data/combined-geo-ip-data.min.json
          data/combined-geo-ip-data.csv
          data/combined-geo-ip-data.xlsx
          data/backups/
        retention-days: 30

    - name: Notify on failure
      if: failure()
      run: |
        echo "❌ 数据同步失败，已自动回退到备份版本"
        echo "📧 请检查GitHub Actions日志获取详细信息" 